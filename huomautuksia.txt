T‰h‰n tiedostoon sopii laittaa huomautuksia toteutusdokumentin 
muutoskommentointia varten. Esimerkiksi:

Luokka       Nimi+pvm   Huomautus
Application  SR 19.3.   Application meni ihan uusiksi. (Noei.)

------------------------------------------------------------------

Luokka       Nimi+pvm   Huomautus
Control      SR 23.3.   compile-metodin parametrin‰ TTK91Source, ei Source.
                        Lis‰tty kentt‰ DEFAULT_MEMORY_SIZE.
                        Muutettu void setLanguage ResourceBundle 
                        loadLanguageFile(File)-metodiksi. T‰t‰ tarvitaan
                        vain kun k‰ytt‰j‰ valitsee oman kielitiedoston.
                        loadSettingsFileContents heitt‰‰ IOExceptionin, 
                        samoin setDefaultStdIn ja setDefaultStdOut.
                        setDefaultStdIn tai myˆhemmin load() heitt‰v‰t
                        lis‰ksi ParseExceptionin, jos stdin-tiedoston 
                        sis‰ltˆ ei tyydyt‰, *sen j‰lkeen* kun ovat 
                        tehneet kaiken muun. (Eli exceptionin voi 
                        ignoroida jos lyst‰‰/n‰ytt‰‰ varoituksen.)
                        Control tarvitsee oletusstdinin ja stdoutin 
                        konstruktorissaan.
                        openSource(File):n pit‰‰ k‰yttˆtapauksen mukaan 
                        palauttaa l‰hdekoodi stringin‰, oli void.
                        Lis‰tty insertStdinToApplication, lis‰tty
                        ParseException ja IOException loadin 
                        heitett‰viin (koska se
                        tunkee applicationiin sit‰ STDIN-dataa samalla).
                        Lis‰tty saveBinary() ja saveBinary(File).
Control      SR 26.3.   Lis‰tty 3  public-final kentt‰‰ DEF_*_POS, ja 
                        public File[] getApplicationDefinitions() kaivamaan
                        Application-luokasta m‰‰ritelm‰t STDIN/STDOUT/HOME. Saa k‰ytt‰‰ 
                        GUIBrainissa jos kiinnostaa.

CompileInfo  AT 23.3.	SetMemoryLine-metodin parametri value on String, ei int.

CompileInfo  AT 24.3.	entiset return-metodit on nyt get-alkuisia. Myˆs DC:n ja DS:n
			metodit ovat muuttuneet. Nyt getDCaddress() ja getDCname()
			sama DS:lle. getMemory on korvattu getDatalla ja getInstructionsilla.

Interpreter  SH 24.3.   Lis‰tty komentojen parametrim‰‰reit‰ ja muutettu  
                        vastaavasti niit‰ commandData taulukossa

RunInfo	OA 26.3		Kaikki muuttujen nimet vaihdettu pienill‰
			kirjaimilla alkaviksi. Isoilla kirjaimilla
 			oli ainakin ADDR, Ri, Rj, ValueOfRi, 
 			ValueOfRj.

CompileInfo  AT 25.3.	symbolValue on String, ennen int. SAmoin set ja get metodit.
			(jotta voi tallettaa DEFin symbolitauluun)

Compiler     AT 25.3.	Lis‰tty metodi parseLine(String) joka palauttaa string taulukon
			jossa on annetty konek‰sky siten, ett‰ positiossa 0 on label
			1 konek‰sky, 2 1. rekisteri, 3 muistinosoitusmoodi, 4 osoite
			ja 5 toinen rekisteri. null jos virheellinen konek‰sky

SymbolTable  SR 26.3.   Control (ja Compiler) tarvitsevat definitioneihin tuen, lis‰tty
                        symbolitauluun String[] getAllDefinitions, String getDefinition(String) 
                        ja void addDefinition(String, String) sek‰ privaattikentt‰ HashMap 
                        definitions. Lis‰ksi InvalidDefinitionException uutena luokkana.

Application  SR 27.3.   getSymbolTable() palauttaa pointterin 
                        symbolitauluun, sill‰ sit‰ ei voi kloonata.

Settings     SR 27.3.   Lis‰tty metodi String[] getKeys().

SymbolTable  SY 4.4.    Nime‰misen yhten‰isyyden vuoksi tehty seuraavat muutokset:
                        getSymbolValue -> getSymbol
                        defineSymbol -> addSymbol

Processor    SR 5.4.    memoryInputin profiilia muutettiin hieman. Heitt‰‰ addressoutofboundsin.
RandomAccessMemory SR 5.4. setMemoryLinen profiilia muutettiin hieman. Se heitt‰‰ 
                           addressoutofbounds-poikkeuksen nyky‰‰n.
